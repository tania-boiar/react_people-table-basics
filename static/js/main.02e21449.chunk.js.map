{"version":3,"sources":["pages/HomePage/HomePage.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","utils/fetchPeople.ts","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","components/Navlink/Navlink.tsx","components/Navbar/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PersonLink","person","name","sex","slug","to","classNames","PeopleTable","people","selectedSlug","map","born","died","father","fatherName","mother","motherName","isSlugSelected","preparedMotherName","preparedFatherName","Loader","getPeople","fetch","response","json","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useParams","handleGettingPeople","peopleFromServer","updatedPeople","find","useEffect","length","NotFoundPage","Navlink","text","isActive","Navbar","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.02e21449.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, sex, slug } = person;\n\n  return (\n    <NavLink\n      to={`../${slug}`}\n      className={() => (\n        classNames({\n          'has-text-danger': sex === 'f',\n        })\n      )}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[]\n  selectedSlug: string\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people, selectedSlug }) => (\n  <table\n    data-cy=\"peopleTable\"\n    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n  >\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Sex</th>\n        <th>Born</th>\n        <th>Died</th>\n        <th>Mother</th>\n        <th>Father</th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {people.map(person => {\n        const {\n          sex,\n          born,\n          died,\n          father,\n          fatherName,\n          mother,\n          motherName,\n          slug,\n        } = person;\n        const isSlugSelected = slug === selectedSlug;\n        const preparedMotherName = motherName || '-';\n        const preparedFatherName = fatherName || '-';\n\n        return (\n          <tr\n            data-cy=\"person\"\n            key={slug}\n            className={classNames(\n              { 'has-background-warning': isSlugSelected },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{sex}</td>\n            <td>{born}</td>\n            <td>{died}</td>\n            <td>\n              {mother\n                ? <PersonLink person={mother} />\n                : preparedMotherName}\n            </td>\n            <td>\n              {father\n                ? <PersonLink person={father} />\n                : preparedFatherName}\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from '../types/Person';\n\n// eslint-disable-next-line\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeople = async (): Promise<Person[]> => {\n  const response = await fetch(API_URL);\n\n  return response.json();\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../utils/fetchPeople';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { slug = '' } = useParams();\n\n  const handleGettingPeople = async () => {\n    setIsLoading(true);\n\n    try {\n      const peopleFromServer = await getPeople();\n\n      setIsError(false);\n\n      const updatedPeople = peopleFromServer.map(person => (\n        {\n          ...person,\n          mother: peopleFromServer\n            .find(mother => mother.name === person.motherName),\n          father: peopleFromServer\n            .find(father => father.name === person.fatherName),\n        }\n      ));\n\n      setPeople(updatedPeople);\n    } catch (error) {\n      setIsError(true);\n    }\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    handleGettingPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {(isLoading && (<Loader />))}\n\n          {people.length === 0 && isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {people.length === 0 && !isError && !isLoading\n          && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length > 0\n          && (<PeopleTable people={people} selectedSlug={slug} />)}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  to: string,\n  text: string\n};\n\nexport const Navlink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => (\n      classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { Navlink } from '../Navlink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <Navlink to=\"/\" text=\"Home\" />\n        <Navlink to=\"people\" text=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport React from 'react';\nimport './App.scss';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { Navbar } from './components/Navbar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <Navbar />\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={<HomePage />}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n\n            <Route\n              path=\"/people\"\n              element={<PeoplePage />}\n            />\n\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":slug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}